{"version":3,"sources":["components/Header.js","Helpers/Paises.js","components/Formulario.js","components/Error.js","components/Clima.js","components/Principal.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","paises","value","name","Formulario","state","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","request","ciudad","_this","current","pais","currentTarget","reset","this","setState","onSubmit","id","type","ref","htmlFor","defaultValue","map","key","Component","Error","mensaje","Clima","mostrarResultado","_this$props$response","response","weather","main","url_icon","concat","icon","alt","temp","toFixed","src","temp_max","temp_min","Principal","errorForm","climaRespuesta","console","log","buscarClimaRequest","url","fetch","then","json","catch","error","respuesta","cod","components_Header","components_Formulario","components_Error","components_Clima","App","components_Principal","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15625edb.chunk.js","sourcesContent":["import React from 'react';\r\nconst Header = (props) =>{\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper darken-2\">\r\n                    <span className=\"brand-logo\">{props.titulo}</span>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","const paises = [\r\n    {value:\"AR\",name:\"Argentina\"},\r\n    {value:\"Co\",name:\"Colombia\"},\r\n    {value:\"CR\",name:\"Costa Rica\"},\r\n    {value:\"ES\",name:\"España\"},\r\n    {value:\"US\",name:\"Estados Unidos\"},\r\n    {value:\"MX\",name:\"México\"},\r\n    {value:\"PE\",name:\"Perú\"}\r\n];\r\nexport default paises;","import React, { Component } from 'react';\r\nimport paises from '../Helpers/Paises';\r\nclass Formulario extends Component {\r\n    state = { \r\n        paises : [],\r\n    }\r\n    ciudadRef = React.createRef();\r\n    paisRef = React.createRef();\r\n    componentDidMount(){\r\n     this.setState({paises});\r\n    }\r\n    buscarClima = (e) =>{\r\n        e.preventDefault();\r\n        const request = {\r\n            ciudad: this.ciudadRef.current.value,\r\n            pais: this.paisRef.current.value\r\n        };\r\n        this.props.buscarClima(request);\r\n        e.currentTarget.reset();\r\n    }\r\n    render() { \r\n        return (  \r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit = {this.buscarClima}>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <input id=\"ciudad\" type=\"text\" ref = {this.ciudadRef}/>\r\n                                <label htmlFor=\"ciudad\">Ciudad:</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <select ref={this.paisRef}>\r\n                                    <option value=\"\" defaultValue>Elige un país</option>\r\n                                    {this.state.paises.map( pais => {\r\n                                         return <option value={pais.value} key={pais.value}>{pais.name}</option>;\r\n                                    })}\r\n                                </select>\r\n                                <label htmlFor=\"pais\">Ciudad:</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 l4 offset-m2\">\r\n                                <input id=\"buscar\" type=\"submit\" className=\"waves-effect waves-ligth btn-large yellow accent-4\" value=\"Buscar...\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Formulario;\r\n","import React from 'react';\r\nclass Error extends React.Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6 offset-m3\">\r\n                        <div className=\"card-panel red darken-4 error\">\r\n                            {this.props.mensaje}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Error;","import React from 'react';\r\nclass Clima extends React.Component {\r\n    state = {  }\r\n    mostrarResultado = () => {\r\n        const { name , weather , main } = this.props.response;\r\n        if(!name || !weather || !main) return null;\r\n        const kelvin = 271.15;\r\n        const url_icon = `https://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n        const alt =`clima de ${name}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"resultado col s12 m8 l6 offset-m2 offset-l3\">\r\n                    <div className=\"card-panel light-blue aling-center\">\r\n                        <span className=\"white-text\">\r\n                            <h2>Resultado clima de: {name}</h2>\r\n                            <p className=\"temperatura\">\r\n                                Actual: {(main.temp -kelvin).toFixed(2)}&deg;C\r\n                                <img src={url_icon} alt={alt} />\r\n                            </p>\r\n                            <p>Max. {(main.temp_max - kelvin).toFixed(2)} &deg;C</p>\r\n                            <p>Min. {(main.temp_min - kelvin).toFixed(2)} &deg;C</p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    render() { \r\n        return (<div>{this.mostrarResultado()}</div>);\r\n    }\r\n}\r\n \r\nexport default Clima;","import React ,{Component}from 'react';\r\nimport Header from './Header';\r\nimport Formulario from './Formulario';\r\nimport Error from './Error';\r\nimport Clima from './Clima';\r\n\r\nclass Principal extends Component {\r\n    state = { errorForm:false, climaRespuesta:{}}\r\n    buscarClima = (request) => {\r\n       console.log('Buscar')\r\n        const errorForm = !request.ciudad || !request.pais;\r\n        this.setState({errorForm});\r\n        if(!errorForm)\r\n          this.buscarClimaRequest(request);\r\n    }\r\n    buscarClimaRequest= request => {\r\n        const {ciudad,pais} = request;\r\n        const appid = '4a606263653f8bb7edcb187175b95e08';\r\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appid}`\r\n        fetch(url).then(response => response.json())\r\n        .then(response => {\r\n            this.setState({climaRespuesta:response})\r\n        }).catch(error=>{});\r\n    }\r\n    render() { \r\n        let error = this.state.errorForm,\r\n        mensaje = \"\";\r\n        const respuesta = this.state.climaRespuesta,\r\n        {cod} = this.state.climaRespuesta;\r\n        if(error){\r\n            mensaje = \"Ambos campos son obligatorios\"\r\n        }else if(cod){\r\n            if(cod === \"404\"){\r\n                error = true;\r\n                mensaje = \"Ciudad no encontrada\";\r\n            }\r\n        }\r\n    \r\n        return (\r\n            <div className=\"app\">\r\n               <Header titulo='Clima React'/>\r\n               <Formulario buscarClima={this.buscarClima}/>\r\n                { error ? <Error mensaje={mensaje}/>:<Clima response={respuesta}/>}\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Principal;","import React from 'react';\nimport Principal from './components/Principal';\n\n\nclass App extends React.Component{\n  render(){\n    return (\n      <Principal/>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}